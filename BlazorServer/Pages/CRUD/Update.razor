@page "/update/{id}"
@using BlazorServer.Data
@using BlazorServer.Data.Models

@if(postToUpdate == null)
{
    <h1>Loading...</h1>
}
else
{
    <h1>Update post "@postToUpdate.Title"</h1>

    <EditForm Model="postToUpdate" OnValidSubmit="UpdatePost">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="postTitle">Title</label>
            <InputText @bind-Value="postToUpdate.Title" class="form-control" id="postTitle" />
        </div>

        <div class="form-group mb-3">
            <label for="postContent">Content</label>
            <InputText @bind-Value="postToUpdate.Content" class="form-control" id="postContent" />
        </div>

        <button class="btn btn-success" type="submit">Save</button>
        <button class="btn btn-secondary" @onclick="@(() => navigationManager.NavigateTo("/"))">Cancel</button>
    </EditForm>
}

@code {
    [Inject] private AppDBContext appDBContext { get; set; }
    [Inject] private NavigationManager navigationManager { get; set; }
    [Parameter] public string id { get; set; }

    private Post postToUpdate;

    protected override async Task OnParametersSetAsync()
    {
        postToUpdate = await appDBContext.Posts.FindAsync(int.Parse(id));
    }

    private async Task UpdatePost()
    {
        appDBContext.Posts.Update(postToUpdate);
        await appDBContext.SaveChangesAsync();
        navigationManager.NavigateTo("/");
    }
}
